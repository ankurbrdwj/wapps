buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.0'
    }
}


		// Apply the java plugin to add support for Java
	apply plugin: 'java'
	apply plugin: 'war'
	apply plugin: 'com.bmuschko.tomcat'
	group 'com.ankur.javascript'

		// JDK version source compatibility
sourceCompatibility = 1.7
		// project version
version = '1.0'
		// War file name
war.baseName = 'HFJavascript'
		// Web directory, this overrides the default value "webapp"
project.webAppDirName = 'webapp'

		// In this section you declare where to find the dependencies of your project
 repositories {
 	mavenCentral()
       mavenLocal()
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    }
// Set source directory
sourceSets {
        main {
            java {
                srcDir 'src'
            }
        }
    }


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'junit:junit:4.12'
 	//classpath 'com.bmuschko:gradle-tomcat-plugin:2.0'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    def tomcatVersion='8.0.30'
     tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

tomcatRun.contextPath = '/'
tomcatRunWar.contextPath = '/HeadFirstJS'